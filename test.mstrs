(SIG 
  (app   List List -> List)
  (cons  Nat List -> List)
  (len   List -> Nat)
  (nil   -> List)
  (s     Nat -> Nat)
  (0     -> Nat)
)
(RULES
  app(nil,ys) -> ys
  app(cons(x,xs),ys) -> cons(x,app(xs,ys))
  len(nil) -> 0
  len(cons(x,xs)) -> s(len(xs))
)
