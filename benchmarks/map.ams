/* nat : natural numbers */
0 :: nat
s :: nat ⇒ nat

/* list: lists of natural numbers */
nil :: list
cons :: nat ⇒ list ⇒ list

map :: (nat ⇒ nat) ⇒ list ⇒ list
map(λy.F⟨y⟩, nil) → nil
map(λy.F⟨y⟩, cons(x, xs)) → cons(F⟨x⟩, map(λy.F⟨y⟩, xs))

add :: nat ⇒ nat ⇒ nat
add(0, y) → y
add(s(x), y) → s(add(x, y))

